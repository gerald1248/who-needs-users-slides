---
title: Who needs users in this brave cloud-centric world?
pdf: who-needs-users.pdf
slideNumber: true
controls: false
transition: slide
backgroundTransition: fade
asciinema: true
center: true
---

<link href="//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">

# <small>WHO NEEDS USERS<br/>IN THIS BRAVE **CLOUD NATIVE** WORLD?</small> {bgcss=tw-colorful .light-on-dark}

```render_a2sketch
.---------------------------------------------.
|[c]                                          |
|                                             |
|                                             |
|                                             |
|                                             |
'---------------------------------------------'

[c]: {"a2s:type": "cloud", "a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

<aside class="notes" data-markdown>
And what's pizza got to do with anything?
</aside>

# END USERS BEWARE

```render_a2sketch
      #-----------------------------------------------------------------------#
      |[q]                                                                    |
      |                                                                       |
      |                                                                       |
      |                                                                       |
      |                                                                       |
      |    Kubernetes is for people building platforms. If you are a          |
      |                                                                       |
      |    developer building your own platform (AppEngine, Cloud Foundry,    |
      |                                                                       |
      |    Heroku clone), then Kubernetes is for you.                         |
      |                                                                       |
      |                                                 - Kelsey Hightower    |
      |                                                                       |
      |                                                                       |
      |                                                                       |
      |                                                                       |
      #-----------------------------------------------------------------------#

[q]: {"a2s:type": "quote-sw", "a2s:delref": true, "fill": "#ef5ba1", "fillStyle": "solid"}
```

<div class="tiny">Source: <a href="https://twitter.com/kelseyhightower/status/1099710178545434625">@kelseyhightower on 24 Feb 2019</a>.</div>

<aside class="notes" data-markdown>
</aside>

# ALL HAPPY FAMILIES {bgcss=tw-bg-light-blue .light-on-dark}

```render_a2sketch
.--------------------------------------------------------------.    
|[c]                                                           |    
|                                                              |    
|           Docker Swarm                                       |
|                                 OpenShift (1-2)              |    
|                      Kubernetes                              | 
|     Apache Mesos                                             | 
|                             Elastic Container Service        | 
|            Heroku                                            | 
|                    Cloud Foundry                             | 
|                                   Panamax                    | 
|          Shipyard                                            | 
|                                       Portainer              | 
|                                                              |    
'--------------------------------------------------------------'    

[c]: {"a2s:type": "cloud", "a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

<aside class="notes" data-markdown>
</aside>

# SPLENDID ISOLATION {bgcss=tw-bg-light-blue .light-on-dark}

```render_a2sketch
.--------------------------------------------------------------.
|[c]                                                           |
|                                                              |
|                                                              |
|                                                              |
|                      Kubernetes                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
'--------------------------------------------------------------'

[c]: {"a2s:type": "cloud", "a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

<aside class="notes" data-markdown>
</aside>

# PIZZA EFFECTS: IDENTITY

```{.render_plantuml args="-Sbackgroundcolor=transparent"}
@startuml
Kubernetes->OpenShift : attribute-based access control (ABAC)
OpenShift->Kubernetes : roles and cluster-roles
Kubernetes->OpenShift : role-based access control (RBAC)
@enduml
```

# PIZZA EFFECTS: NETWORKING

```{.render_plantuml args="-Sbackgroundcolor=transparent"}
@startuml
Kubernetes->OpenShift : flat network
OpenShift->Kubernetes : multitenant plugin
OpenShift->Kubernetes : prototype network policies
Kubernetes->OpenShift : network policies
@enduml
```

# PIZZA EFFECTS: GENERIC 

```{.render_plantuml args="-Sbackgroundcolor=transparent"}
@startuml
Kubernetes->OpenShift : feature unavailable
OpenShift->Kubernetes : imperative API calls
Kubernetes->OpenShift : declarative API objects 
@enduml
```

# MULTI-TENANCY {bg=#6a2469 .light-on-dark}

```render_a2sketch
#=----------------------------#
|[w]                          |
| cluster                     |
|                             |
| #----------#   #----------# |
| |[p]       |   |[b]       | |
| | boeing   |   | airbus   | |
| |          |   |          | |
| |          |   |          | |
| #----------#   #----------# |
|                             |
|                             |
|                             |
|                             |
|                             |
|                             |
|                             |
|                             |
#-----------------------------#

[p]: {"a2s:delref": true, "fill": "#ef5ba1", "fillStyle": "solid"}
[b]: {"a2s:delref": true, "fill": "#27bdce", "fillStyle": "solid"}
[w]: {"a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

# ENABLE ROUTER ACCESS {bg=#6a2469 .light-on-dark}

```render_a2sketch
#=----------------------------#
|[w]                          |
| cluster                     |
| #----------#   #----------# |
| |[p]       |   |[b]       | |
| | boeing   |   | airbus   | |
| |          |   |          | |
| |          |   |          | |
| #----+-----#   #-----+----# |
|      ^               ^      |
|      |               |      |
|      v               v      |
| #----+-----#   #-----+----# |
| |          |   |          | |
| | router-a |   | router-b | |
| |          |   |          | |
| |          |   |          | |
| #----------#   #----------# |
#-----------------------------#

[p]: {"a2s:delref": true, "fill": "#ef5ba1", "fillStyle": "solid"}
[b]: {"a2s:delref": true, "fill": "#27bdce", "fillStyle": "solid"}
[w]: {"a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

```shell
$ oc adm pod-network join-projects --to router-a boeing
$ oc adm pod-network join-projects --to router-b airbus
$ oc get netnamespace airbus boeing router-a router-b
NAME          NETID
airbus        1064346
boeing        1086658
router-a      1064346
router-b      1086658
```

# SELECTIVE ISOLATION {bg=#6a2469 .light-on-dark}

```render_a2sketch
#=----------------------------#
|[w]                          |
| cluster                     |
| #----------#   #----------# |
| |[p]       |   |[b]       | |
| | boeing   |   | airbus   | |
| |          |   |          | |
| |          |   |          | |
| #----+-----#   #----------# |
|      ^                      |
|      |                      |
|      v                      |
| #----+-----#   #----------# |
| |          |   |          | |
| | router-a |   | router-b | |
| |          |   |          | |
| |          |   |          | |
| #----------#   #----------# |
#-----------------------------#

[p]: {"a2s:delref": true, "fill": "#ef5ba1", "fillStyle": "solid"}
[b]: {"a2s:delref": true, "fill": "#27bdce", "fillStyle": "solid"}
[w]: {"a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

```shell
$ oc adm pod-network isolate-projects airbus
$ oc get netnamespace airbus boeing router-a router-b
NAME          NETID
airbus        1020181
boeing        1086658
router-a      1086658
router-b      1064346
```

# NETWORK POLICIES {bg=#fff44d}

<img src="assets/images/goal.svg" alt="schematic of a typical pod network"/>

# AUDIT {bg=#fff44d}

<img src="assets/images/network-policy-viewer.png" alt="screenshot of network policy viewer"/>

<div class="tiny">Source: <a href="https://github.com/gerald1248/k8s-network-policy-viewer">github.com/gerald1248/k8s-network-policy-viewer</a></div>

# IMPLEMENTATION {bgcss=tw-bg-light-blue .light-on-dark}

```render_a2sketch
.--------------------------------------------------------------.
|[c]                                                           |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                 Somebody else's problem                      |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
'--------------------------------------------------------------'

[c]: {"a2s:type": "cloud", "a2s:delref": true, "fill": "#fff", "fillStyle": "solid"}
```

# WHAT THE USER SAW {bg=#000 .light-on-dark}

```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-whitelist-pod
spec:
  podSelector:
    matchLabels:
      app: httpd-bob
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: httpd-alice
```

# USER ALL AT SEA (1) {bg=#000 .light-on-dark}

```yaml
podSelector: {}
```

<small>is the opposite of:</small>

```yaml
podSelector: []
```

# USER ALL AT SEA (2) {bg=#000 .light-on-dark}

```yaml
ingress:
- from:
  - namespaceSelector:
      matchLabels:
        user: alice
    podSelector:
      matchLabels:
        role: client
```

<small>is not at all the same as:</small>

```yaml
ingress:
- from:
  - namespaceSelector:
      matchLabels:
        user: alice
  - podSelector:
      matchLabels:
        role: client
```

<div class="tiny">Source: <a href="https://kubernetes.io/docs/concepts/services-networking/network-policies/#behavior-of-to-and-from-selectors">kubernetes.io/docs</a>.</div>

# WHAT THE PARSER DID

```{.render_plantuml args="-Sbackgroundcolor=transparent"}
@startuml
scale 550 height
(*) -down-> "NetworkPolicy object found"
note right: let's ignore policies in other namespaces for now
-down-> "Which pods in the namespace are affected by this policy?"
--> "policy type Ingress set (or none)?"
if "" then
  -->[true] "block all incoming traffic"
  --> "whitelist any pods/namespaces selected under ingress.from"
  --> "policy type Egress set?"
else
  ->[false] "policy type Egress set?"
endif

if "" then
  -->[true] "block all outgoing traffic"
  --> "whitelist any pods/namespaces selected under egress.to"
  --> "other NetworkPolicy objects in the namespace?"
else
  -->[false] "other NetworkPolicy objects in the namespace?"
endif
  
if "" then
  -->[true] All bets are off
  -->"NetworkPolicy object found"
else
  -->[false] (*)
endif

@enduml
```

# USER PREFERENCE

```render_a2sketch
         ^
features |                                    • NetworkPolicy
         |
         |
         |                    
         |                   
         |  .-----------------.
         |  |[c]              |
         |  |• ovs-multitenant|
         |  |                 |
         |  '-----------------'
         |                                        good enough
         |    --    --    --    --    --    --    --    --   
         |                                        won't work
         |                                                   
         |                                                   
         |                                                   
         |                                                   
         |
         |
         #--------------------------------------------------->
                                                   complexity

[c]: {"a2s:delref":true,"a2s:type":"circle"}
```

# ENTER OPERATOR {bg=#000 .light-on-dark}

```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-isolated-whitelist
  labels:
    app: ingress-isolated-whitelist
  annotations:
    networking.k8s.io/netnamespace-id: "100"
```

# BEWARE ROUGH EDGES

```render_a2sketch
#------------------------------------------------------------------#
|[q]                                                               |
|                                                                  |
|                                                                  |
|                                                                  |
|                                                                  |
|    I'm a little bit sad how complex Kubernetes is right now.     |
|                                                                  |
|    In some sense Kubernetes is not for end users, it's for       |
|                                                                  |
|    people who set up clusters and clusters are for end users.    |
|                                                                  |
|                                               - Wojtek Cichoń    |
|                                                                  |
|                                                                  |
|                                                                  |
|                                                                  |
#------------------------------------------------------------------#

[q]: {"a2s:type": "quote-se", "a2s:delref": true, "fill": "#27bdce", "fillStyle": "solid"}
```

<div class="tiny">Source: Cichoń, W. 2018. <a href="https://thenewstack.io/kubernetes-pioneer-tim-hockin-on-whats-real-and-whats-not">What's real and what's not</a>.</div>

<aside class="notes" data-markdown>
</aside>

# <small>THANK YOU</small> {bgcss=tw-colorful .light-on-dark}

<small>Slides built with <a href="https://github.com/arnehilmann/markdeck">Markdeck</a><br/>
<i class="fa fa-github" aria-hidden="true"></i> <a href="https://github.com/gerald1248/who-needs-users-slides">gerald1248/who-needs-users-slides</a><br/>
<i class="fa fa-twitter" aria-hidden="true"></i> 03spirit</small>


<img src="assets/images/ThoughtWorks_logo_white.png" alt="ThoughtWorks logo" width="25%"/>

